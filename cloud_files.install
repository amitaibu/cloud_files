<?php

/**
 * @file
 * Install, update and uninstall functions for the Cloud files module.
 */

/**
 * Implements hook_schema()
 */
function cloud_files_schema() {
  $schema['cloud_files_container'] = array(
    'description' => 'Storage for user-defined cloud files containers.',
    'fields' => array(
      // Although the "name" should be enough as the primary key, the numeric ID
      // is required for the internal use of entity API.
      'container_id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Numeric container ID.',
      ),
      'name' => array(
        'description' => 'The unified identifier for a container.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'published' => array(
        'description' => 'Boolean indicating whether the container is published to CDN.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'cdn_domain' => array(
        'description' => 'The CDN domain URI for a published container.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'temp_url_expire' => array(
        'description' => 'The expiration time of the temporary URL in seconds.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('container_id'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_install().
 */
function cloud_files_install() {
  // Clear field info cache, so entity reference field can be used.
  field_info_cache_clear();
  $field = array(
    'entity_types' => array('file'),
    'settings' => array(
      'handler' => 'base',
      'target_type' => 'cloud_files_container',
      'handler_settings' => array(
        'target_bundles' => array(),
      ),
    ),
    'field_name' => 'cloud_files_container',
    'type' => 'entityreference',
    'locked' => TRUE,
  );
  field_create_field($field);

  $instance = array(
    'field_name' => 'cloud_files_container',
    'entity_type' => 'file',
    'bundle' => 'cloud_files',
    'label' => t('Cloud files container'),
  );
  field_create_instance($instance);
}

/**
 * Implements hook_uninstall().
 */
function cloud_files_uninstall() {
  variable_del('rackspace_cloud_username');
  variable_del('rackspace_cloud_api_key');
  variable_del('rackspace_cloud_container');
  variable_del('rackspace_cloud_cdn_domain');
  variable_del('rackspace_cloud_auth_url');
  variable_del('rackspace_cloud_temp_url_key');
}

