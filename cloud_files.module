<?php

/**
 * @file
 * Cloud file integration.
 */

/**
 * Implements hook_menu().
 */
function cloud_files_menu() {
  $items = array();
  $items['admin/config/media/cloud-files'] = array(
    'title' => 'Cloud Files',
    'description' => 'Cloud Files Configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cloud_files_admin_settings'),
    'access arguments' => array('administer cloud files'),
    'file' => 'includes/cloud_files.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permissions().
 */
function cloud_files_permissions() {
  return array(
    'administer cloud files' => array(
      'title' => t('Administer cloud files'),
      'description' => t('Administer cloud files settings'),
    ),
  );
}

/**
 * Implements hook_stream_wrappers().
 */
function cloud_files_stream_wrappers() {
  return array(
    'rcf' => array(
      'name' => t('Rackspace Cloud Files'),
      'class' => 'RackspaceCloudFilesStreamWrapper',
      'description' => t('Rackspace Cloud Files.'),
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function cloud_files_libraries_info() {
  return array(
    'rackspace' => array(
      'title' => 'Rackspace Cloud Files PHP API',
      'vendor url' => 'https://github.com/rackspace/php-cloudfiles',
      'download url' => 'https://github.com/rackspace/php-cloudfiles',
      'path' => 'php-cloudfiles',
      'version arguments' => array(
        'file' => 'php-cloudfiles/Changelog',
        'pattern' => '/(\d+\.\d+(\.\d+)?)/',
      ),
      'files' => array(
        'php' => array(
          'cloudfiles.php',
        ),
      ),
    ),
  );
}

/**
 * Get Cloud files authentication.
 */
function cloud_files_get_authentication() {
  $credentials = cache_get("rackspace_cloud_credentials");

  if ($credentials) {
    // Check the credentials are less than 1 day old.
    $created = new DateTime(date("r", $credentials->created));
    $now = new DateTime();
    $age = $now->diff($created);
    if ($age->d > 0) {
      if (variable_get('rackspace_cloud_debug')) {
        watchdog("cloud_files", "credentials are too old", NULL, WATCHDOG_DEBUG);
      }
      $credentials = NULL;
    }
  }

  if ($credentials) {
    if (variable_get('rackspace_cloud_debug')) {
      watchdog("cloud_files", "loading cached credentials", NULL, WATCHDOG_DEBUG);
    }

    $auth_token = $credentials->data['auth_token'];
    $storage_url = $credentials->data['storage_url'];
    $cdnm_url = $credentials->data['cdnm_url'];

    $auth = new CF_Authentication();
    $auth->load_cached_credentials($auth_token, $storage_url, $cdnm_url);
  }
  else {
    if (variable_get('rackspace_cloud_debug')) {
      watchdog("cloud_files", "Requesting Rackspace authentication", NULL, WATCHDOG_DEBUG);
    }
    $auth = new CF_Authentication(variable_get('rackspace_cloud_username'),
                                  variable_get('rackspace_cloud_api_key'),
                                  NULL,
                                  variable_get('rackspace_cloud_auth_url'));

    // @todo: handle no autheintication.
    $auth->authenticate();
    $credentials = $auth->export_credentials();

    cache_set("rackspace_cloud_credentials", $credentials, 'cache', CACHE_TEMPORARY);
  }

  return $auth;
}